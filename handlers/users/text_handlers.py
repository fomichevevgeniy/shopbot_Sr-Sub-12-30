from aiogram.types import Message
from data.loader import bot, dp, db
from states.states import NumberState
from aiogram.dispatcher import FSMContext
import re
from keyboards.reply import generate_main_menu, \
    generate_delivery_type, generate_filials, generate_categories

async def start_register(message: Message, state=None):
    await NumberState.phone.set()
    await message.answer('–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: <b>+998 ** *** ** **</b>')

@dp.message_handler(state=NumberState.phone)
async def get_phone(message: Message, state: FSMContext):
    phone = message.text
    result1 = re.search(r'\+998 \d\d \d\d\d \d\d \d\d', phone)
    result2 = re.search(r'\+998\d{9}', phone)
    if result1 or result2:
        await message.answer('–û–∫')
        chat_id = message.chat.id
        full_name = message.from_user.full_name
        await state.finish()
        db.insert_user(chat_id, full_name, phone)
        await show_main_menu(message)
    else:
        await message.answer('No')
        await state.finish()
        await again_start_register(message)


async def again_start_register(message: Message, state=None):
    await NumberState.phone.set()
    await message.answer('''–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ –∑–∞–ø–∏—Å—å. 
–ù–∞–ø–∏—à–∏—Ç–µ –≤ —ç—Ç–æ–º —Ñ–æ—Ä–º–∞—Ç–µ: <b>+998 ** *** ** **</b>''')

@dp.message_handler(regexp='‚óÄ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
async def show_main_menu(message: Message):
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª: ', reply_markup=generate_main_menu())

# @dp.message_handler(regexp='‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏')



@dp.message_handler(regexp='üõç –ó–∞–∫–∞–∑–∞—Ç—å')
@dp.message_handler(regexp='‚óÄ –ö –≤—ã–±–æ—Ä—É –¥–æ—Å—Ç–∞–≤–∫–∏')
async def choice_delivery(message: Message):
    await message.answer('–ó–∞–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π –∑–∞–∫–∞–∑ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ üôã‚Äç‚ôÇ\n–∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥–æ—Å—Ç–∞–≤–∫—É üöô',
                         reply_markup=generate_delivery_type())


@dp.message_handler(regexp='üèÉ –°–∞–º–æ–≤—ã–≤–æ–∑')
async def choice_filial(message: Message):
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–ª–∏–∞–ª', reply_markup=generate_filials())


filials = [i[0] for i in db.get_filials()] # ['–º–∞–∫—Å–∏–º–∫–∞', '—á–æ—Ä—Å—É']

@dp.message_handler(lambda message: message.text in filials)
async def show_menu(message: Message):
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é: ', reply_markup=generate_categories())


